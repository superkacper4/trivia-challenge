{"version":3,"sources":["style/theme.ts","style/GlobalStyle.ts","redux/questionsSlice.ts","redux/titleSlice.ts","components/Button/Button.ts","components/H2/H2.ts","components/QuestionCounter/QuestionCounter.css.ts","components/QuestionCounter/QuestionCounter.tsx","components/ProgressBar/ProgressBar.css.ts","components/ProgressBar/ProgressBar.tsx","components/QuestionOverview/QuestionOverview.css.ts","assets/o.svg","assets/x.svg","components/QuestionOverview/QuestionOverview.tsx","components/Logo/Logo.css.ts","assets/logo.svg","components/Logo/Logo.tsx","components/Loader/Loader.css.ts","components/Loader/Loader.tsx","components/Background/Background.css.ts","assets/elipse1.svg","assets/elipse2.svg","assets/MaskGroup.svg","assets/MaskGroup(1).svg","assets/MaskGroup(2).svg","assets/MaskGroup(3).svg","assets/Vector165.svg","assets/Vector166.svg","components/Background/Background.tsx","views/TitlePage/TitlePage.css.ts","assets/cup.svg","assets/star.svg","views/TitlePage/TitlePage.tsx","redux/quizSlice.ts","views/QuizPage/QuizPage.css.ts","views/QuizPage/QuizPage.tsx","views/ResultsPage/ResultsPage.css.ts","assets/Star1.svg","assets/Star0.svg","assets/avatar.svg","views/ResultsPage/ResultsPage.tsx","views/ErrorPage/ErrorPage.css.ts","views/ErrorPage/ErrorPage.tsx","Router/routes.ts","Router/RouterComponent.tsx","App/App.js","reportWebVitals.js","redux/store.ts","index.js"],"names":["theme","fontSizes","desktop","h1","m","button","question","currentQuestion","questionOverview","level","topic","mobile","colors","main","secondary","third","fourth","fivth","sixth","seventh","eighth","nineth","white","breakPoints","phone","tablet","bigDesktop","GlobalStyle","createGlobalStyle","counterSlice","createSlice","name","initialState","questions","isLoading","isError","reducers","setQuestions","state","action","payload","setLoading","setError","actions","titleSlice","difficulty","amount","setDifficulty","setAmount","Button","styled","option","css","H2","h2","StyledP","p","score","StyledSpan","span","QuestionCounter","StyledWrapper","div","StyledProgressBar","StyledProgress","ProgressBar","StyledQuestionOverview","isCorrect","StyledSign","QuestionOverview","dangerouslySetInnerHTML","__html","src","oImg","alt","xImg","StyledLogo","img","Logo","logoImg","StyledLoader","Loader","StyledBackground","StyledLeftTop","width","height","left","top","StyledRightBot","right","bottom","StyledLeftBot","Background","elipseImg1","elipseImg2","maskImg3","maskImg4","vectorImg2","vectorImg1","maskImg2","maskImg1","StyledTitlePage","section","StyledWelcomeDiv","StyledH1","StyledForm","form","StyledDiv","StyledLabel","label","StyledIcon","styles","StyledInput","input","StyledOption","StyledSelect","select","TitlePage","useState","difficultyLocal","setDifficultyLocal","amountLocal","setAmountLocal","dispatch","useDispatch","history","useHistory","onSubmit","fetch","api","method","then","response","json","data","results","catch","push","cupImg","value","onChange","e","target","handleSelect","required","disabled","starImg","type","placeholder","quizSlice","answers","setAnswers","StyledQuizPage","StyledLevel","StyledQuestion","QuizPage","numberQuestion","setNumberQuestion","answersLocal","setAnswersLocal","useSelector","title","handleClick","newVal","currentTarget","Number","paths","RESULTS","to","ERROR","category","createMarkup","onClick","StyledResultsPage","StyledScore","StyledAvatar","StyledStarsDiv","StyledStar","ResultsPage","setScore","quiz","useEffect","forEach","i","correct_answer","prevState","avatarImg","length","map","star1Img","star0Img","TITLE","StyledErrorPage","ErrorPage","QUIZ","path","component","exact","RouterComponent","routes","route","key","App","Helmet","charSet","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","titleReducer","questionsReducer","quizReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.846a09a3.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components';\r\n\r\nconst theme: DefaultTheme = {\r\n    fontSizes: {\r\n        desktop: {\r\n            h1: '46px',\r\n            m: '18px',\r\n            button: '21px',\r\n            question: '31px',\r\n            currentQuestion: '20px',\r\n            questionOverview: '16px',\r\n            level: '28px',\r\n            topic: '81px',\r\n\r\n        },\r\n        mobile: {\r\n            h1: '26px',\r\n            m: '13px',\r\n            button: '15px',\r\n            question: '25px',\r\n            currentQuestion: '20px',\r\n            questionOverview: '12px',\r\n            level: '13px',\r\n            topic: '31px',\r\n        }\r\n    },\r\n\r\n    colors: {\r\n        main: '#424A9E',\r\n        secondary: '#E5E5E5',\r\n        third: '#FFA67A',\r\n        fourth: '#FF6065',\r\n        fivth: '#FF6065',\r\n        sixth: '#C65252',\r\n        seventh: '#DBDEFF',\r\n        eighth: '#FFDBDB',\r\n        nineth: '#676eb8',\r\n        white: 'white',\r\n    },\r\n    breakPoints: {\r\n        phone: 'min-width:425px',\r\n        tablet: 'min-width:768px',\r\n        desktop: 'min-width:1024px',\r\n        bigDesktop: 'min-width:1440px',\r\n    }\r\n};\r\n\r\nexport default theme;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body{\r\n        background-color: ${({ theme }) => theme.colors.main};\r\n        overflow-x: hidden;\r\n        padding: 0;\r\n        margin: 0;\r\n        font-family: 'Quicksand', sans-serif;\r\n        /* height: 100vh; */\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n/* eslint-disable camelcase */\r\n\r\nexport interface questionsState {\r\n    category: string;\r\n    type: boolean;\r\n    difficulty: string;\r\n    question: string;\r\n    correct_answer: string;\r\n    incorrect_answers: string[];\r\n}\r\n\r\ninterface questionInterface {\r\n    questions: questionsState[];\r\n    isLoading: boolean;\r\n    isError: boolean;\r\n}\r\n\r\n\r\nconst initialState: questionInterface = {\r\n    questions: [],\r\n    isLoading: false,\r\n    isError: false\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'questions',\r\n    initialState,\r\n    reducers: {\r\n        setQuestions: (state, action) => {\r\n            state.questions = action.payload\r\n        },\r\n        setLoading: (state, action) => {\r\n            state.isLoading = action.payload\r\n        },\r\n        setError: (state, action) => {\r\n            state.isError = action.payload\r\n        }\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setQuestions, setError, setLoading } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface titleState {\r\n    difficulty: string;\r\n    amount: string;\r\n}\r\n\r\n\r\nconst initialState: titleState = {\r\n    difficulty: 'easy',\r\n    amount: '0',\r\n}\r\n\r\nexport const titleSlice = createSlice({\r\n    name: 'title',\r\n    initialState,\r\n    reducers: {\r\n        setDifficulty: (state, action: PayloadAction<string>) => {\r\n            state.difficulty = action.payload\r\n        },\r\n        setAmount: (state, action: PayloadAction<string>) => {\r\n            state.amount = action.payload\r\n        },\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setAmount, setDifficulty } = titleSlice.actions\r\n\r\nexport default titleSlice.reducer","import styled, { css } from 'styled-components'\r\n\r\n\r\n\r\nconst Button = styled.button<{\r\n    option?: string;\r\n}>`\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.button};\r\n    padding: 3vh;\r\n    margin-bottom: 2vh;\r\n    border-radius: 14px;\r\n    border: none;\r\n\r\n    ${({ theme, option }) => {\r\n        switch (option) {\r\n            case 'white':\r\n                return css`\r\n                background-color: ${theme.colors.white};\r\n                border: 4px solid ${theme.colors.main};\r\n                color: ${theme.colors.main};\r\n\r\n                @media (${theme.breakPoints.desktop}){\r\n                    &:hover{\r\n                        background-color: lightgray;\r\n                    }\r\n                }\r\n                `;\r\n\r\n            case 'blue':\r\n                return css`\r\n                color: ${theme.colors.white};\r\n                background-color: ${theme.colors.main};\r\n\r\n                @media (${theme.breakPoints.desktop}){\r\n                    &:hover{\r\n                        background-color: ${theme.colors.nineth};\r\n                    }\r\n                }\r\n                `;\r\n\r\n            default:\r\n                return css`\r\n                background-image: linear-gradient(to right, ${theme.colors.third}, ${theme.colors.fourth});\r\n                box-shadow: 0px 5px 0px 0px ${theme.colors.sixth};\r\n                color: ${theme.colors.white};\r\n\r\n                @media (${theme.breakPoints.desktop}){\r\n                    &:hover{\r\n                    background-image: linear-gradient(to right, ${theme.colors.third}, ${theme.colors.third});\r\n                    }\r\n                }\r\n            `;\r\n        }\r\n    }}\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: 60%;\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.button};\r\n        cursor: pointer;\r\n\r\n    }\r\n`;\r\n\r\nexport default Button","import styled from 'styled-components'\r\n\r\nconst H2 = styled.h2`\r\n    text-align: center;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.h1};\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.h1};\r\n    }\r\n`;\r\n\r\nexport default H2","import styled from 'styled-components'\r\n\r\ninterface types {\r\n    score: boolean;\r\n}\r\n\r\nconst StyledP = styled.p`\r\n    width: ${({ score }: types) => score ? 'auto' : '100%'};\r\n    margin-left: ${({ score }: types) => score ? '10px' : 'none'};\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.level};\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.currentQuestion};\r\n    color: ${({ theme }) => theme.colors.third};\r\n`;\r\n\r\nexport { StyledP, StyledSpan }","import React from 'react'\r\nimport { StyledP, StyledSpan } from './QuestionCounter.css'\r\n\r\ninterface types {\r\n    currentQuestion: number;\r\n    amount: number;\r\n    score: boolean;\r\n}\r\n\r\n\r\nconst QuestionCounter = ({ currentQuestion, amount, score }: types) => (\r\n    <StyledP score={score}>\r\n        <StyledSpan>{currentQuestion < 10 ? `0${currentQuestion}` : currentQuestion}</StyledSpan>/{amount}\r\n    </StyledP>\r\n)\r\n\r\nexport default QuestionCounter","import styled from 'styled-components'\r\n\r\ninterface types {\r\n    currentQuestion: number;\r\n    amount: number;\r\n}\r\n\r\nconst StyledWrapper = styled.div`\r\n    width: 80%;\r\n    max-width: 350px;\r\n`;\r\n\r\nconst StyledProgressBar = styled.div`\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height:5px;\r\n    background-color: ${({ theme }) => theme.colors.seventh};\r\n`;\r\n\r\nconst StyledProgress = styled.div`\r\n    width: ${({ currentQuestion, amount }: types) => `${(currentQuestion / amount) * 100}%`};\r\n    height: 5px;\r\n    z-index: 2;\r\n    background-color: ${({ theme }) => theme.colors.third};\r\n`\r\n\r\n\r\nexport { StyledWrapper, StyledProgress, StyledProgressBar }\r\n\r\n","import React from 'react'\r\nimport QuestionCounter from '../QuestionCounter'\r\nimport { StyledWrapper, StyledProgress, StyledProgressBar } from './ProgressBar.css'\r\n\r\ninterface types {\r\n    currentQuestion: number;\r\n    amount: number;\r\n}\r\n\r\n\r\nconst ProgressBar = ({ currentQuestion, amount }: types) => (\r\n    <StyledWrapper>\r\n        <QuestionCounter currentQuestion={currentQuestion} amount={amount} score={false} />\r\n        <StyledProgressBar>\r\n            <StyledProgress currentQuestion={currentQuestion} amount={amount} />\r\n        </StyledProgressBar>\r\n    </StyledWrapper>\r\n)\r\n\r\nexport default ProgressBar","import styled from 'styled-components'\r\n\r\nconst StyledQuestionOverview = styled.div<{ isCorrect: boolean }>`\r\n    width: 100%;\r\n    height: 65px;\r\n    margin-bottom: 2vh; \r\n    padding: 2vw;\r\n    background-color: ${({ theme, isCorrect }) => isCorrect ? theme.colors.white : theme.colors.eighth};\r\n    border-radius: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.questionOverview};\r\n    color: black;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.questionOverview};\r\n\r\n    }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n    width: 90%;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nconst StyledSign = styled.div`\r\n    width: 10%;\r\n    padding: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nexport { StyledQuestionOverview, StyledP, StyledSign }","export default __webpack_public_path__ + \"static/media/o.be59375b.svg\";","export default __webpack_public_path__ + \"static/media/x.6df828b8.svg\";","import React from 'react'\r\nimport { StyledQuestionOverview, StyledP, StyledSign } from './QuestionOverview.css'\r\nimport oImg from '../../assets/o.svg'\r\nimport xImg from '../../assets/x.svg'\r\n\r\ninterface types {\r\n    question: string;\r\n    isCorrect: boolean;\r\n}\r\n\r\nconst QuestionOverview = ({ question, isCorrect }: types) => {\r\n    const createMarkup = () => ({ __html: question })\r\n\r\n    return (\r\n        <StyledQuestionOverview isCorrect={isCorrect}>\r\n            <StyledP dangerouslySetInnerHTML={createMarkup()} />\r\n            <StyledSign>{isCorrect ? <img src={oImg} alt='o' /> : <img src={xImg} alt='x' />}</StyledSign>\r\n        </StyledQuestionOverview>\r\n    )\r\n}\r\n\r\nexport default QuestionOverview","import styled from 'styled-components'\r\n\r\nconst StyledLogo = styled.img`\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\n\r\nexport { StyledLogo }","export default __webpack_public_path__ + \"static/media/logo.ce71c741.svg\";","import React from 'react'\r\nimport { StyledLogo } from './Logo.css'\r\nimport logoImg from '../../assets/logo.svg'\r\n\r\nconst Logo = () => (\r\n    <StyledLogo src={logoImg} />\r\n)\r\n\r\nexport default Logo","import styled from \"styled-components\";\r\n\r\ninterface types {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst StyledLoader = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    transform: ${({ isLoading }: types) => isLoading ? 'translateX(0)' : 'translateX(-100vw)'};\r\n    transition: transform .5s;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 5;\r\n    \r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        padding: 20vw;\r\n    }\r\n`;\r\n\r\nexport { StyledLoader }","import React from 'react'\r\nimport Logo from '../Logo'\r\nimport { StyledLoader } from './Loader.css'\r\n\r\ninterface types {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst Loader = ({ isLoading }: types) => (\r\n    <StyledLoader isLoading={isLoading}>\r\n        <Logo />\r\n    </StyledLoader>\r\n)\r\n\r\nexport default Loader","import styled from 'styled-components'\r\n\r\ninterface typesLeftTop {\r\n    left: string;\r\n    top: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ninterface typesRightBot {\r\n    right: string;\r\n    bottom: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ninterface typesLeftBot {\r\n    left: string;\r\n    bottom: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst StyledBackground = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst StyledLeftTop = styled.img<typesLeftTop>`\r\n    width: ${({ width }) => `${width}vw`};\r\n    height: ${({ height }) => `${height}vw`};\r\n    position: absolute;\r\n    left: ${({ left }) => left};\r\n    top: ${({ top }) => top};\r\n\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: ${({ width }) => `${width / 2}vw`};\r\n        height: ${({ height }) => `${height / 2}vw`};\r\n    }\r\n`;\r\n\r\nconst StyledRightBot = styled.img<typesRightBot>`\r\n    width: ${({ width }) => `${width}vw`};\r\n    height: ${({ height }) => `${height}vw`};\r\n    position: absolute;\r\n    right: ${({ right }) => right};\r\n    bottom: ${({ bottom }) => bottom};\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: ${({ width }) => `${width / 2}vw`};\r\n        height: ${({ height }) => `${height / 2}vw`};\r\n    }\r\n`;\r\n\r\nconst StyledLeftBot = styled.img<typesLeftBot>`\r\n    width: ${({ width }) => `${width}vw`};\r\n    height: ${({ height }) => `${height}vw`};\r\n    position: absolute;\r\n    left: ${({ left }) => left};\r\n    bottom: ${({ bottom }) => bottom};\r\n    \r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: ${({ width }) => `${width / 2}vw`};\r\n        height: ${({ height }) => `${height / 2}vw`};\r\n    }\r\n`;\r\n\r\n// const StyledLeftTop = styled.img<types>`\r\n//     position: absolute;\r\n//     left: ${({ left }) => left};\r\n//     top: ${({ top }) => top};\r\n\r\n// `;\r\n\r\nexport { StyledBackground, StyledLeftTop, StyledRightBot, StyledLeftBot }","export default __webpack_public_path__ + \"static/media/elipse1.2e0af929.svg\";","export default __webpack_public_path__ + \"static/media/elipse2.869466d2.svg\";","export default __webpack_public_path__ + \"static/media/MaskGroup.c20dad79.svg\";","export default __webpack_public_path__ + \"static/media/MaskGroup(1).52b529b6.svg\";","export default __webpack_public_path__ + \"static/media/MaskGroup(2).bd93598d.svg\";","export default __webpack_public_path__ + \"static/media/MaskGroup(3).60a5303e.svg\";","export default __webpack_public_path__ + \"static/media/Vector165.3fcdd420.svg\";","export default __webpack_public_path__ + \"static/media/Vector166.d93f1f60.svg\";","import React from 'react'\r\nimport { StyledBackground, StyledLeftTop, StyledRightBot, StyledLeftBot } from './Background.css'\r\nimport elipseImg1 from '../../assets/elipse1.svg'\r\nimport elipseImg2 from '../../assets/elipse2.svg'\r\nimport maskImg1 from '../../assets/MaskGroup.svg'\r\nimport maskImg2 from '../../assets/MaskGroup(1).svg'\r\nimport maskImg3 from '../../assets/MaskGroup(2).svg'\r\nimport maskImg4 from '../../assets/MaskGroup(3).svg'\r\nimport vectorImg1 from '../../assets/Vector165.svg'\r\nimport vectorImg2 from '../../assets/Vector166.svg'\r\n\r\ninterface types {\r\n    white: boolean;\r\n}\r\n\r\nconst Background = ({ white }: types) => (\r\n    <StyledBackground>\r\n        {white ? (\r\n            <>\r\n                <StyledRightBot src={elipseImg1} alt='shape' width={30} height={50} bottom='0' right='0' />\r\n                <StyledLeftTop src={elipseImg2} alt='shape' width={30} height={30} top='0' left='0' />\r\n                <StyledLeftBot src={maskImg3} alt='shape' width={30} height={50} bottom='0' left='0' />\r\n                <StyledRightBot src={maskImg4} alt='shape' width={30} height={50} bottom='50%' right='-5%' />\r\n            </>\r\n        ) : (\r\n            <>\r\n                <StyledRightBot src={vectorImg2} alt='shape' width={30} height={50} bottom='0' right='-5%' />\r\n                <StyledLeftTop src={vectorImg1} alt='shape' width={20} height={50} top='5%' left='-2%' />\r\n                <StyledLeftBot src={maskImg2} alt='shape' width={40} height={40} bottom='0' left='0' />\r\n                <StyledRightBot src={maskImg1} alt='shape' width={30} height={60} bottom='50%' right='-5%' />\r\n            </>\r\n        )}\r\n    </StyledBackground>\r\n)\r\n\r\nexport default Background","import styled, { css } from 'styled-components'\r\n\r\nconst StyledTitlePage = styled.section`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 3;\r\n\r\n\r\n    @media (${({ theme }) => theme.breakPoints.tablet}){\r\n    width: 70%;\r\n    }\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n    width: 50%;\r\n    }\r\n\r\n    @media (${({ theme }) => theme.breakPoints.bigDesktop}){\r\n    width: 30%;\r\n    }\r\n`;\r\n\r\nconst StyledWelcomeDiv = styled.div`\r\n    margin: 0;\r\n    padding: 0;\r\n    display: flex; \r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.h1};\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.h1};\r\n    }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n    width: 100%;\r\n    min-height: 50vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n    min-height: 40vh;\r\n    }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0;\r\n    margin: 10px 0;\r\n    color: ${({ theme }) => theme.colors.third};\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: 60%;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledIcon = styled.img`\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst styles = css`\r\n    width: 100%;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.m};\r\n    background-color: transparent;\r\n    border: 1px solid ${({ theme }) => theme.colors.white};\r\n    border-radius: 10px;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    padding: 2vh;\r\n    margin: 0 0 10px;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.m};\r\n        width: 60%;\r\n        cursor: pointer;\r\n\r\n        &:hover{\r\n            background-color: ${({ theme }) => theme.colors.nineth};\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    ${styles}\r\n`;\r\n\r\nconst StyledOption = styled.option`\r\n    ${styles}\r\n    /* background-color: red; */\r\n    color: black;\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n    ${styles}\r\n`;\r\n\r\nexport { StyledTitlePage, StyledH1, StyledInput, StyledOption, StyledSelect, StyledWelcomeDiv, StyledLabel, StyledForm, StyledDiv, StyledWrapper, StyledIcon }","export default __webpack_public_path__ + \"static/media/cup.b19bb3ce.svg\";","export default __webpack_public_path__ + \"static/media/star.d2b8e242.svg\";","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { api } from '../../Router/routes'\r\nimport { setQuestions, setError, setLoading } from '../../redux/questionsSlice'\r\nimport { setAmount } from '../../redux/titleSlice';\r\nimport { Button, Logo, Background } from '../../components';\r\nimport { StyledTitlePage, StyledH1, StyledInput, StyledOption, StyledSelect, StyledWelcomeDiv, StyledLabel, StyledForm, StyledDiv, StyledWrapper, StyledIcon } from './TitlePage.css';\r\nimport cupImg from '../../assets/cup.svg'\r\nimport starImg from '../../assets/star.svg'\r\n// import { getQuestions } from './TitlePage.api'\r\n\r\nconst TitlePage = () => {\r\n    const [difficultyLocal, setDifficultyLocal] = useState('')\r\n    const [amountLocal, setAmountLocal] = useState('')\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const getQuestions = (amount: string, difficulty: string) => {\r\n        dispatch(setLoading(true))\r\n        fetch(`${api}amount=${amount}&difficulty=${difficulty}&type=boolean`, {\r\n            method: 'GET',\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch(setQuestions(data.results))\r\n                dispatch(setLoading(false))\r\n                dispatch(setError(false))\r\n            })\r\n            .catch(() => {\r\n                dispatch(setLoading(false))\r\n                dispatch(setError(true))\r\n            });\r\n    }\r\n\r\n    const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setDifficultyLocal(e.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = () => {\r\n        getQuestions(amountLocal, difficultyLocal)\r\n        dispatch(setAmount(amountLocal))\r\n\r\n        history.push('/quiz')\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledTitlePage>\r\n            <Background white={false} />\r\n            <StyledWrapper>\r\n                <StyledWelcomeDiv>\r\n                    <StyledH1>Welcome to the</StyledH1>\r\n                    <Logo />\r\n                </StyledWelcomeDiv>\r\n                <StyledForm onSubmit={handleSubmit}>\r\n                    <StyledDiv>\r\n                        <StyledDiv>\r\n                            <StyledLabel><StyledIcon src={cupImg} alt='cup' />Difficulty</StyledLabel>\r\n                            <StyledSelect value={difficultyLocal} onChange={(e) => handleSelect(e)} required>\r\n                                <StyledOption value=\"\" disabled>-----</StyledOption>\r\n                                <StyledOption value=\"easy\">easy</StyledOption>\r\n                                <StyledOption value=\"hard\">hard</StyledOption>\r\n                            </StyledSelect>\r\n                        </StyledDiv>\r\n                        <StyledDiv>\r\n                            <StyledLabel><StyledIcon src={starImg} alt='star' />Amount</StyledLabel>\r\n                            <StyledInput type='number' placeholder='------' value={amountLocal} onChange={(e) => setAmountLocal(e.target.value)} required />\r\n                        </StyledDiv>\r\n                    </StyledDiv>\r\n                    <Button type='submit'>next</Button>\r\n                </StyledForm>\r\n            </StyledWrapper>\r\n        </StyledTitlePage >\r\n    )\r\n}\r\n\r\n\r\nexport default TitlePage","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport interface titleState {\r\n    answers: string[];\r\n}\r\n\r\n\r\nconst initialState: titleState = {\r\n    answers: [],\r\n}\r\n\r\nexport const quizSlice = createSlice({\r\n    name: 'quiz',\r\n    initialState,\r\n    reducers: {\r\n        setAnswers: (state, action) => {\r\n            state.answers = action.payload\r\n        },\r\n\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setAnswers } = quizSlice.actions\r\n\r\nexport default quizSlice.reducer","import styled from 'styled-components'\r\n\r\nconst StyledQuizPage = styled.section`\r\n    min-height: 100vh;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    width: 80%;\r\n    color: ${({ theme }) => theme.colors.main};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    z-index: 3;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: 60%;\r\n    }\r\n`;\r\n\r\nconst StyledLevel = styled.p`\r\n    letter-spacing: 0.5em;  \r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.level};\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.level};\r\n    }\r\n`;\r\n\r\nconst StyledQuestion = styled.div`\r\n    text-align: left;\r\n    width: 90%;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.question};\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.question};\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\n\r\nexport { StyledQuizPage, StyledLevel, StyledQuestion, StyledDiv, StyledWrapper }","import React, { useState } from 'react'\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { paths } from '../../Router/routes'\r\nimport { setAnswers } from '../../redux/quizSlice';\r\nimport { RootState } from '../../redux/store'\r\nimport { StyledQuizPage, StyledLevel, StyledQuestion, StyledDiv, StyledWrapper } from './QuizPage.css';\r\nimport { Button, H2, ProgressBar, Loader, Background } from '../../components';\r\n\r\nconst QuizPage = () => {\r\n    const [numberQuestion, setNumberQuestion] = useState(0)\r\n    const [answersLocal, setAnswersLocal] = useState<string[]>([])\r\n    const { questions, isLoading, isError } = useSelector((state: RootState) => state.questions);\r\n    const { amount } = useSelector((state: RootState) => state.title);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        const newVal: string = e.currentTarget.value\r\n        setAnswersLocal([...answersLocal, newVal])\r\n        setNumberQuestion(numberQuestion + 1)\r\n\r\n        if (numberQuestion + 1 >= Number(amount)) {\r\n            history.push(paths.RESULTS)\r\n            dispatch(setAnswers(answersLocal))\r\n        }\r\n    }\r\n    const createMarkup = () => ({ __html: questions[numberQuestion]?.question })\r\n\r\n    return (\r\n        <StyledQuizPage>\r\n            <Background white />\r\n\r\n            {isError ? <Redirect to={paths.ERROR} /> : null}\r\n            <Loader isLoading={isLoading} />\r\n            <StyledWrapper>\r\n                <StyledDiv>\r\n                    <H2>{questions[numberQuestion]?.category}</H2>\r\n                    <StyledLevel>level 1</StyledLevel>\r\n                </StyledDiv>\r\n\r\n                <ProgressBar currentQuestion={numberQuestion + 1} amount={Number(amount)} />\r\n\r\n                <StyledQuestion dangerouslySetInnerHTML={createMarkup()} />\r\n\r\n                <StyledDiv>\r\n                    <Button type='button' value='True' onClick={(e) => handleClick(e)} option='blue'> True </Button>\r\n                    <Button type='button' value='False' onClick={(e) => handleClick(e)} option='white'> False </Button>\r\n                </StyledDiv>\r\n            </StyledWrapper>\r\n        </StyledQuizPage>\r\n    )\r\n}\r\n\r\nexport default QuizPage","import styled from 'styled-components'\r\n\r\nconst StyledResultsPage = styled.section`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: ${({ theme }) => theme.fontSizes.mobile.currentQuestion};\r\n    color: ${({ theme }) => theme.colors.white};\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        font-size: ${({ theme }) => theme.fontSizes.desktop.currentQuestion};\r\n\r\n    }\r\n`\r\n\r\nconst StyledWrapper = styled.div`\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    z-index: 3;\r\n\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: 60%;\r\n    }\r\n\r\n    @media (${({ theme }) => theme.breakPoints.bigDesktop}){\r\n        width: 40%;\r\n    }\r\n`;\r\n\r\nconst StyledScore = styled.div`\r\n    width: 100%;\r\n    padding: 4vh 2vw 0 2vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledAvatar = styled.img`\r\n    width: 10vw;\r\n    height: 10vw;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    border-radius: 50%;\r\n    margin-right:10px ;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: 5vw;\r\n        height: 5vw;\r\n    }\r\n\r\n    @media (${({ theme }) => theme.breakPoints.bigDesktop}){\r\n        width: 2.5vw;\r\n        height: 2.5vw;\r\n    }\r\n`\r\n\r\nconst StyledStarsDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    margin: 2vh 0; \r\n`;\r\n\r\nconst StyledStar = styled.img`\r\n    width: 5vw;\r\n    height: 5vw;\r\n\r\n    @media (${({ theme }) => theme.breakPoints.desktop}){\r\n        width: 3vw;\r\n        height: 3vw;\r\n    }\r\n\r\n    @media (${({ theme }) => theme.breakPoints.bigDesktop}){\r\n        width: 1.5vw;\r\n        height: 1.5vw;\r\n    }\r\n`;\r\n\r\nexport { StyledResultsPage, StyledStarsDiv, StyledWrapper, StyledScore, StyledAvatar, StyledStar }","export default __webpack_public_path__ + \"static/media/Star1.60c328e5.svg\";","export default __webpack_public_path__ + \"static/media/Star0.7fbc72c8.svg\";","export default __webpack_public_path__ + \"static/media/avatar.2b2e2de9.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { paths } from '../../Router/routes'\r\nimport { setQuestions, setError, setLoading } from '../../redux/questionsSlice'\r\nimport { setAmount } from '../../redux/titleSlice';\r\nimport { RootState } from '../../redux/store'\r\nimport { StyledResultsPage, StyledStarsDiv, StyledWrapper, StyledScore, StyledAvatar, StyledStar } from './ResultsPage.css'\r\nimport { QuestionOverview, Button, QuestionCounter, Background } from '../../components';\r\nimport star1Img from '../../assets/Star1.svg'\r\nimport star0Img from '../../assets/Star0.svg'\r\nimport avatarImg from '../../assets/avatar.svg'\r\n\r\nconst ResultsPage = () => {\r\n    const [score, setScore] = useState<number>(0)\r\n    const { questions } = useSelector((state: RootState) => state.questions);\r\n    const { answers } = useSelector((state: RootState) => state.quiz);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const countScore = () => {\r\n        questions?.forEach((question, i) => {\r\n            if (question.correct_answer === answers[i]) {\r\n                setScore(prevState => prevState + 1)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handlePlayAgain = () => {\r\n        history.push(paths.TITLE)\r\n        dispatch(setQuestions([]))\r\n        dispatch(setLoading(false))\r\n        dispatch(setError(false))\r\n        dispatch(setAmount('0'))\r\n    }\r\n\r\n    useEffect(() => {\r\n        countScore()\r\n    }, [])\r\n\r\n    return (\r\n        <StyledResultsPage>\r\n            <Background white={false} />\r\n\r\n            <StyledWrapper>\r\n                <StyledScore>\r\n                    <StyledAvatar src={avatarImg} alt='avatar' /> You scored:  <QuestionCounter currentQuestion={score} amount={answers?.length + 1} score />\r\n                </StyledScore>\r\n                <StyledStarsDiv>\r\n                    {questions?.map((question, i) => {\r\n                        if (question.correct_answer === answers[i]) {\r\n                            return <StyledStar src={star1Img} alt='o' key={question.question} />\r\n                        }\r\n                        return null\r\n                    })}\r\n\r\n                    {questions?.map((question, i) => {\r\n                        if (question.correct_answer !== answers[i]) {\r\n                            return <StyledStar src={star0Img} alt='x' key={question.question} />\r\n                        }\r\n                        return null\r\n                    })}\r\n                </StyledStarsDiv>\r\n                {questions?.map((question, i) => {\r\n                    const isCorrect = question.correct_answer === answers[i]\r\n                    return (<QuestionOverview isCorrect={isCorrect} question={question.question} key={question.question} />)\r\n                })}\r\n\r\n                <Button type=\"button\" onClick={handlePlayAgain}>play again</Button>\r\n            </StyledWrapper>\r\n        </StyledResultsPage>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ResultsPage","import styled from 'styled-components'\r\n\r\nconst StyledErrorPage = styled.section`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${({ theme }) => theme.colors.eighth};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport { StyledErrorPage }\r\n","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from '../../components'\r\nimport { StyledErrorPage } from './ErrorPage.css'\r\n\r\nconst ErrorPage = () => {\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <StyledErrorPage>\r\n            Something gone wrong.\r\n            <Button onClick={handleClick} >Try Again!</Button>\r\n        </StyledErrorPage>\r\n    )\r\n}\r\n\r\nexport default ErrorPage","import { TitlePage, QuizPage, ResultsPage, ErrorPage } from '../views'\r\n\r\nexport const api = 'https://opentdb.com/api.php?'\r\n\r\nexport const paths = {\r\n    TITLE: '/',\r\n    QUIZ: '/quiz',\r\n    RESULTS: '/results',\r\n    ERROR: '/error'\r\n}\r\n\r\nexport default [\r\n    {\r\n        path: paths.TITLE,\r\n        component: TitlePage,\r\n        exact: true\r\n    },\r\n    {\r\n        path: paths.QUIZ,\r\n        component: QuizPage,\r\n        exact: true\r\n    },\r\n    {\r\n        path: paths.RESULTS,\r\n        component: ResultsPage,\r\n        exact: true\r\n    },\r\n    {\r\n        path: paths.ERROR,\r\n        component: ErrorPage,\r\n        exact: true\r\n    },\r\n]\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport routes from './routes'\r\n\r\nconst RouterComponent = () => (\r\n    <Switch>\r\n        {routes.map((route) => (\r\n            <Route {...route} key={route.path} />\r\n        ))}\r\n    </Switch>\r\n)\r\nexport default RouterComponent\r\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { Helmet } from \"react-helmet\";\nimport { HashRouter } from \"react-router-dom\";\nimport { theme, GlobalStyle } from '../style';\nimport RouterComponent from '../Router';\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>TRIVIA Challenge</title>\n      <link href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap\" rel=\"stylesheet\" />\n    </Helmet>\n    <HashRouter>\n      <RouterComponent />\n      <GlobalStyle />\n    </HashRouter>\n  </ThemeProvider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport titleReducer from './titleSlice'\r\nimport quizReducer from './quizSlice'\r\nimport questionsReducer from './questionsSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: { title: titleReducer, questions: questionsReducer, quiz: quizReducer },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}